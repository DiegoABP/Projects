$date
	Wed Apr  7 23:53:18 2021
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	10ns
$end

$scope module ALUTB $end
$var reg 4 ! A [3:0] $end
$var reg 4 " AS [3:0] $end
$var reg 4 # AI [3:0] $end
$var reg 4 $ AD [3:0] $end
$var reg 4 % AA [3:0] $end
$var reg 4 & AO [3:0] $end
$var reg 4 ' AN [3:0] $end
$var reg 4 ( AX [3:0] $end
$var reg 4 ) AL [3:0] $end
$var reg 4 * AR [3:0] $end
$var reg 4 + B [3:0] $end
$var reg 4 , BS [3:0] $end
$var reg 4 - BI [3:0] $end
$var reg 4 . BD [3:0] $end
$var reg 4 / BA [3:0] $end
$var reg 4 0 BO [3:0] $end
$var reg 4 1 BN [3:0] $end
$var reg 4 2 BX [3:0] $end
$var reg 4 3 BL [3:0] $end
$var reg 4 4 BR [3:0] $end
$var reg 1 5 FlagIn $end
$var reg 1 6 FlagInS $end
$var reg 1 7 FlagInI $end
$var reg 1 8 FlagInD $end
$var reg 1 9 FlagInA $end
$var reg 1 : FlagInO $end
$var reg 1 ; FlagInN $end
$var reg 1 < FlagInX $end
$var reg 1 = FlagInL $end
$var reg 1 > FlagInR $end
$var wire 1 ? Result [3] $end
$var wire 1 @ Result [2] $end
$var wire 1 A Result [1] $end
$var wire 1 B Result [0] $end
$var wire 1 C ResultS [3] $end
$var wire 1 D ResultS [2] $end
$var wire 1 E ResultS [1] $end
$var wire 1 F ResultS [0] $end
$var wire 1 G ResultI [3] $end
$var wire 1 H ResultI [2] $end
$var wire 1 I ResultI [1] $end
$var wire 1 J ResultI [0] $end
$var wire 1 K ResultD [3] $end
$var wire 1 L ResultD [2] $end
$var wire 1 M ResultD [1] $end
$var wire 1 N ResultD [0] $end
$var wire 1 O ResultA [3] $end
$var wire 1 P ResultA [2] $end
$var wire 1 Q ResultA [1] $end
$var wire 1 R ResultA [0] $end
$var wire 1 S ResultO [3] $end
$var wire 1 T ResultO [2] $end
$var wire 1 U ResultO [1] $end
$var wire 1 V ResultO [0] $end
$var wire 1 W ResultN [3] $end
$var wire 1 X ResultN [2] $end
$var wire 1 Y ResultN [1] $end
$var wire 1 Z ResultN [0] $end
$var wire 1 [ ResultX [3] $end
$var wire 1 \ ResultX [2] $end
$var wire 1 ] ResultX [1] $end
$var wire 1 ^ ResultX [0] $end
$var wire 1 _ ResultL [3] $end
$var wire 1 ` ResultL [2] $end
$var wire 1 a ResultL [1] $end
$var wire 1 b ResultL [0] $end
$var wire 1 c ResultR [3] $end
$var wire 1 d ResultR [2] $end
$var wire 1 e ResultR [1] $end
$var wire 1 f ResultR [0] $end
$var wire 1 g Flags [3] $end
$var wire 1 h Flags [2] $end
$var wire 1 i Flags [1] $end
$var wire 1 j Flags [0] $end
$var wire 1 k FlagsS [3] $end
$var wire 1 l FlagsS [2] $end
$var wire 1 m FlagsS [1] $end
$var wire 1 n FlagsS [0] $end
$var wire 1 o FlagsI [3] $end
$var wire 1 p FlagsI [2] $end
$var wire 1 q FlagsI [1] $end
$var wire 1 r FlagsI [0] $end
$var wire 1 s FlagsD [3] $end
$var wire 1 t FlagsD [2] $end
$var wire 1 u FlagsD [1] $end
$var wire 1 v FlagsD [0] $end
$var wire 1 w FlagsA [3] $end
$var wire 1 x FlagsA [2] $end
$var wire 1 y FlagsA [1] $end
$var wire 1 z FlagsA [0] $end
$var wire 1 { FlagsO [3] $end
$var wire 1 | FlagsO [2] $end
$var wire 1 } FlagsO [1] $end
$var wire 1 ~ FlagsO [0] $end
$var wire 1 !! FlagsN [3] $end
$var wire 1 "! FlagsN [2] $end
$var wire 1 #! FlagsN [1] $end
$var wire 1 $! FlagsN [0] $end
$var wire 1 %! FlagsX [3] $end
$var wire 1 &! FlagsX [2] $end
$var wire 1 '! FlagsX [1] $end
$var wire 1 (! FlagsX [0] $end
$var wire 1 )! FlagsL [3] $end
$var wire 1 *! FlagsL [2] $end
$var wire 1 +! FlagsL [1] $end
$var wire 1 ,! FlagsL [0] $end
$var wire 1 -! FlagsR [3] $end
$var wire 1 .! FlagsR [2] $end
$var wire 1 /! FlagsR [1] $end
$var wire 1 0! FlagsR [0] $end

$scope module ADDER $end
$var parameter 32 1! bits $end
$var parameter 4 2! ALUControl $end
$var wire 1 3! ALUA [3] $end
$var wire 1 4! ALUA [2] $end
$var wire 1 5! ALUA [1] $end
$var wire 1 6! ALUA [0] $end
$var wire 1 7! ALUB [3] $end
$var wire 1 8! ALUB [2] $end
$var wire 1 9! ALUB [1] $end
$var wire 1 :! ALUB [0] $end
$var wire 1 ;! ALUFlagIn $end
$var wire 1 ? ALUResult [3] $end
$var wire 1 @ ALUResult [2] $end
$var wire 1 A ALUResult [1] $end
$var wire 1 B ALUResult [0] $end
$var wire 1 g ALUFlags [3] $end
$var wire 1 h ALUFlags [2] $end
$var wire 1 i ALUFlags [1] $end
$var wire 1 j ALUFlags [0] $end
$var wire 1 <! C $end
$var wire 1 =! N $end
$var wire 1 >! V $end
$var reg 1 ?! Z $end

$scope begin genblk1 $end

$scope module F0 $end
$var parameter 32 @! bits $end
$var wire 1 3! A [3] $end
$var wire 1 4! A [2] $end
$var wire 1 5! A [1] $end
$var wire 1 6! A [0] $end
$var wire 1 7! B [3] $end
$var wire 1 8! B [2] $end
$var wire 1 9! B [1] $end
$var wire 1 :! B [0] $end
$var wire 1 ;! cin $end
$var wire 1 ? Sc [3] $end
$var wire 1 @ Sc [2] $end
$var wire 1 A Sc [1] $end
$var wire 1 B Sc [0] $end
$var wire 1 <! Co $end
$var wire 1 =! N $end
$var wire 1 >! V $end
$var wire 1 A! S [4] $end
$var wire 1 B! S [3] $end
$var wire 1 C! S [2] $end
$var wire 1 D! S [1] $end
$var wire 1 E! S [0] $end
$var wire 1 F! Ck $end
$var wire 1 G! Ne $end

$scope module CLv $end
$var parameter 32 H! bits $end
$var wire 1 3! A [3] $end
$var wire 1 4! A [2] $end
$var wire 1 5! A [1] $end
$var wire 1 6! A [0] $end
$var wire 1 7! B [3] $end
$var wire 1 8! B [2] $end
$var wire 1 9! B [1] $end
$var wire 1 :! B [0] $end
$var wire 1 ;! cin $end
$var wire 1 A! S [4] $end
$var wire 1 B! S [3] $end
$var wire 1 C! S [2] $end
$var wire 1 D! S [1] $end
$var wire 1 E! S [0] $end
$var wire 1 F! Ck $end
$var wire 1 I! C [4] $end
$var wire 1 J! C [3] $end
$var wire 1 K! C [2] $end
$var wire 1 L! C [1] $end
$var wire 1 M! C [0] $end
$var wire 1 N! G [3] $end
$var wire 1 O! G [2] $end
$var wire 1 P! G [1] $end
$var wire 1 Q! G [0] $end
$var wire 1 R! P [3] $end
$var wire 1 S! P [2] $end
$var wire 1 T! P [1] $end
$var wire 1 U! P [0] $end

$scope begin genblk3[3] $end
$var parameter 32 V! k $end
$upscope $end

$scope begin genblk3[2] $end
$var parameter 32 W! k $end
$upscope $end

$scope begin genblk3[1] $end
$var parameter 32 X! k $end
$upscope $end

$scope begin genblk3[0] $end
$var parameter 32 Y! k $end
$upscope $end

$scope begin genblk2[4] $end
$var parameter 32 Z! j $end
$upscope $end

$scope begin genblk2[3] $end
$var parameter 32 [! j $end
$upscope $end

$scope begin genblk2[2] $end
$var parameter 32 \! j $end
$upscope $end

$scope begin genblk2[1] $end
$var parameter 32 ]! j $end
$upscope $end

$scope begin genblk1[3] $end
$var parameter 32 ^! i $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 _! i $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 `! i $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 a! i $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module SUB $end
$var parameter 32 b! bits $end
$var parameter 4 c! ALUControl $end
$var wire 1 d! ALUA [3] $end
$var wire 1 e! ALUA [2] $end
$var wire 1 f! ALUA [1] $end
$var wire 1 g! ALUA [0] $end
$var wire 1 h! ALUB [3] $end
$var wire 1 i! ALUB [2] $end
$var wire 1 j! ALUB [1] $end
$var wire 1 k! ALUB [0] $end
$var wire 1 l! ALUFlagIn $end
$var wire 1 C ALUResult [3] $end
$var wire 1 D ALUResult [2] $end
$var wire 1 E ALUResult [1] $end
$var wire 1 F ALUResult [0] $end
$var wire 1 k ALUFlags [3] $end
$var wire 1 l ALUFlags [2] $end
$var wire 1 m ALUFlags [1] $end
$var wire 1 n ALUFlags [0] $end
$var wire 1 m! C $end
$var wire 1 n! N $end
$var wire 1 o! V $end
$var reg 1 p! Z $end

$scope begin genblk1 $end

$scope module F1 $end
$var parameter 32 q! bits $end
$var wire 1 d! A [3] $end
$var wire 1 e! A [2] $end
$var wire 1 f! A [1] $end
$var wire 1 g! A [0] $end
$var wire 1 h! B [3] $end
$var wire 1 i! B [2] $end
$var wire 1 j! B [1] $end
$var wire 1 k! B [0] $end
$var wire 1 l! cin $end
$var wire 1 r! S [4] $end
$var wire 1 s! S [3] $end
$var wire 1 t! S [2] $end
$var wire 1 u! S [1] $end
$var wire 1 v! S [0] $end
$var wire 1 C Sc [3] $end
$var wire 1 D Sc [2] $end
$var wire 1 E Sc [1] $end
$var wire 1 F Sc [0] $end
$var wire 1 w! Bc [3] $end
$var wire 1 x! Bc [2] $end
$var wire 1 y! Bc [1] $end
$var wire 1 z! Bc [0] $end
$var wire 1 m! Co $end
$var wire 1 n! N $end
$var wire 1 o! V $end
$var wire 1 {! Ck $end

$scope module CLS $end
$var parameter 32 |! bits $end
$var wire 1 d! A [3] $end
$var wire 1 e! A [2] $end
$var wire 1 f! A [1] $end
$var wire 1 g! A [0] $end
$var wire 1 w! B [3] $end
$var wire 1 x! B [2] $end
$var wire 1 y! B [1] $end
$var wire 1 z! B [0] $end
$var wire 1 l! cin $end
$var wire 1 r! S [4] $end
$var wire 1 s! S [3] $end
$var wire 1 t! S [2] $end
$var wire 1 u! S [1] $end
$var wire 1 v! S [0] $end
$var wire 1 {! Ck $end
$var wire 1 }! C [4] $end
$var wire 1 ~! C [3] $end
$var wire 1 !" C [2] $end
$var wire 1 "" C [1] $end
$var wire 1 #" C [0] $end
$var wire 1 $" G [3] $end
$var wire 1 %" G [2] $end
$var wire 1 &" G [1] $end
$var wire 1 '" G [0] $end
$var wire 1 (" P [3] $end
$var wire 1 )" P [2] $end
$var wire 1 *" P [1] $end
$var wire 1 +" P [0] $end

$scope begin genblk3[3] $end
$var parameter 32 ," k $end
$upscope $end

$scope begin genblk3[2] $end
$var parameter 32 -" k $end
$upscope $end

$scope begin genblk3[1] $end
$var parameter 32 ." k $end
$upscope $end

$scope begin genblk3[0] $end
$var parameter 32 /" k $end
$upscope $end

$scope begin genblk2[4] $end
$var parameter 32 0" j $end
$upscope $end

$scope begin genblk2[3] $end
$var parameter 32 1" j $end
$upscope $end

$scope begin genblk2[2] $end
$var parameter 32 2" j $end
$upscope $end

$scope begin genblk2[1] $end
$var parameter 32 3" j $end
$upscope $end

$scope begin genblk1[3] $end
$var parameter 32 4" i $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 5" i $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 6" i $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 7" i $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module INC $end
$var parameter 32 8" bits $end
$var parameter 4 9" ALUControl $end
$var wire 1 :" ALUA [3] $end
$var wire 1 ;" ALUA [2] $end
$var wire 1 <" ALUA [1] $end
$var wire 1 =" ALUA [0] $end
$var wire 1 >" ALUB [3] $end
$var wire 1 ?" ALUB [2] $end
$var wire 1 @" ALUB [1] $end
$var wire 1 A" ALUB [0] $end
$var wire 1 B" ALUFlagIn $end
$var wire 1 G ALUResult [3] $end
$var wire 1 H ALUResult [2] $end
$var wire 1 I ALUResult [1] $end
$var wire 1 J ALUResult [0] $end
$var wire 1 o ALUFlags [3] $end
$var wire 1 p ALUFlags [2] $end
$var wire 1 q ALUFlags [1] $end
$var wire 1 r ALUFlags [0] $end
$var wire 1 C" C $end
$var wire 1 D" N $end
$var wire 1 E" V $end
$var reg 1 F" Z $end

$scope begin genblk1 $end

$scope module F2 $end
$var parameter 32 G" bits $end
$var wire 1 :" A [3] $end
$var wire 1 ;" A [2] $end
$var wire 1 <" A [1] $end
$var wire 1 =" A [0] $end
$var wire 1 >" B [3] $end
$var wire 1 ?" B [2] $end
$var wire 1 @" B [1] $end
$var wire 1 A" B [0] $end
$var wire 1 B" cin $end
$var wire 1 H" C [3] $end
$var wire 1 I" C [2] $end
$var wire 1 J" C [1] $end
$var wire 1 K" C [0] $end
$var wire 1 L" S [4] $end
$var wire 1 M" S [3] $end
$var wire 1 N" S [2] $end
$var wire 1 O" S [1] $end
$var wire 1 P" S [0] $end
$var wire 1 Q" Ck $end
$var reg 4 R" Op [3:0] $end
$var wire 1 G Sc [3] $end
$var wire 1 H Sc [2] $end
$var wire 1 I Sc [1] $end
$var wire 1 J Sc [0] $end
$var wire 1 C" Co $end
$var wire 1 D" N $end
$var wire 1 E" V $end

$scope module CLv $end
$var parameter 32 S" bits $end
$var wire 1 T" A [3] $end
$var wire 1 U" A [2] $end
$var wire 1 V" A [1] $end
$var wire 1 W" A [0] $end
$var wire 1 H" B [3] $end
$var wire 1 I" B [2] $end
$var wire 1 J" B [1] $end
$var wire 1 K" B [0] $end
$var wire 1 X" cin $end
$var wire 1 L" S [4] $end
$var wire 1 M" S [3] $end
$var wire 1 N" S [2] $end
$var wire 1 O" S [1] $end
$var wire 1 P" S [0] $end
$var wire 1 Q" Ck $end
$var wire 1 Y" C [4] $end
$var wire 1 Z" C [3] $end
$var wire 1 [" C [2] $end
$var wire 1 \" C [1] $end
$var wire 1 ]" C [0] $end
$var wire 1 ^" G [3] $end
$var wire 1 _" G [2] $end
$var wire 1 `" G [1] $end
$var wire 1 a" G [0] $end
$var wire 1 b" P [3] $end
$var wire 1 c" P [2] $end
$var wire 1 d" P [1] $end
$var wire 1 e" P [0] $end

$scope begin genblk3[3] $end
$var parameter 32 f" k $end
$upscope $end

$scope begin genblk3[2] $end
$var parameter 32 g" k $end
$upscope $end

$scope begin genblk3[1] $end
$var parameter 32 h" k $end
$upscope $end

$scope begin genblk3[0] $end
$var parameter 32 i" k $end
$upscope $end

$scope begin genblk2[4] $end
$var parameter 32 j" j $end
$upscope $end

$scope begin genblk2[3] $end
$var parameter 32 k" j $end
$upscope $end

$scope begin genblk2[2] $end
$var parameter 32 l" j $end
$upscope $end

$scope begin genblk2[1] $end
$var parameter 32 m" j $end
$upscope $end

$scope begin genblk1[3] $end
$var parameter 32 n" i $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 o" i $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 p" i $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 q" i $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module DEC $end
$var parameter 32 r" bits $end
$var parameter 4 s" ALUControl $end
$var wire 1 t" ALUA [3] $end
$var wire 1 u" ALUA [2] $end
$var wire 1 v" ALUA [1] $end
$var wire 1 w" ALUA [0] $end
$var wire 1 x" ALUB [3] $end
$var wire 1 y" ALUB [2] $end
$var wire 1 z" ALUB [1] $end
$var wire 1 {" ALUB [0] $end
$var wire 1 |" ALUFlagIn $end
$var wire 1 K ALUResult [3] $end
$var wire 1 L ALUResult [2] $end
$var wire 1 M ALUResult [1] $end
$var wire 1 N ALUResult [0] $end
$var wire 1 s ALUFlags [3] $end
$var wire 1 t ALUFlags [2] $end
$var wire 1 u ALUFlags [1] $end
$var wire 1 v ALUFlags [0] $end
$var wire 1 }" C $end
$var wire 1 ~" N $end
$var wire 1 !# V $end
$var reg 1 "# Z $end

$scope begin genblk1 $end

$scope module F3 $end
$var parameter 32 ## bits $end
$var wire 1 t" A [3] $end
$var wire 1 u" A [2] $end
$var wire 1 v" A [1] $end
$var wire 1 w" A [0] $end
$var wire 1 x" B [3] $end
$var wire 1 y" B [2] $end
$var wire 1 z" B [1] $end
$var wire 1 {" B [0] $end
$var wire 1 |" cin $end
$var wire 1 $# C [3] $end
$var wire 1 %# C [2] $end
$var wire 1 &# C [1] $end
$var wire 1 '# C [0] $end
$var wire 1 (# S [4] $end
$var wire 1 )# S [3] $end
$var wire 1 *# S [2] $end
$var wire 1 +# S [1] $end
$var wire 1 ,# S [0] $end
$var wire 1 K Sc [3] $end
$var wire 1 L Sc [2] $end
$var wire 1 M Sc [1] $end
$var wire 1 N Sc [0] $end
$var wire 1 -# Bc [3] $end
$var wire 1 .# Bc [2] $end
$var wire 1 /# Bc [1] $end
$var wire 1 0# Bc [0] $end
$var wire 1 1# Ck $end
$var reg 4 2# Op [3:0] $end
$var wire 1 }" Co $end
$var wire 1 ~" N $end
$var wire 1 !# V $end

$scope module CLv $end
$var parameter 32 3# bits $end
$var wire 1 4# A [3] $end
$var wire 1 5# A [2] $end
$var wire 1 6# A [1] $end
$var wire 1 7# A [0] $end
$var wire 1 -# B [3] $end
$var wire 1 .# B [2] $end
$var wire 1 /# B [1] $end
$var wire 1 0# B [0] $end
$var wire 1 8# cin $end
$var wire 1 (# S [4] $end
$var wire 1 )# S [3] $end
$var wire 1 *# S [2] $end
$var wire 1 +# S [1] $end
$var wire 1 ,# S [0] $end
$var wire 1 1# Ck $end
$var wire 1 9# C [4] $end
$var wire 1 :# C [3] $end
$var wire 1 ;# C [2] $end
$var wire 1 <# C [1] $end
$var wire 1 =# C [0] $end
$var wire 1 ># G [3] $end
$var wire 1 ?# G [2] $end
$var wire 1 @# G [1] $end
$var wire 1 A# G [0] $end
$var wire 1 B# P [3] $end
$var wire 1 C# P [2] $end
$var wire 1 D# P [1] $end
$var wire 1 E# P [0] $end

$scope begin genblk3[3] $end
$var parameter 32 F# k $end
$upscope $end

$scope begin genblk3[2] $end
$var parameter 32 G# k $end
$upscope $end

$scope begin genblk3[1] $end
$var parameter 32 H# k $end
$upscope $end

$scope begin genblk3[0] $end
$var parameter 32 I# k $end
$upscope $end

$scope begin genblk2[4] $end
$var parameter 32 J# j $end
$upscope $end

$scope begin genblk2[3] $end
$var parameter 32 K# j $end
$upscope $end

$scope begin genblk2[2] $end
$var parameter 32 L# j $end
$upscope $end

$scope begin genblk2[1] $end
$var parameter 32 M# j $end
$upscope $end

$scope begin genblk1[3] $end
$var parameter 32 N# i $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 O# i $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 P# i $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 Q# i $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module AND $end
$var parameter 32 R# bits $end
$var parameter 4 S# ALUControl $end
$var wire 1 T# ALUA [3] $end
$var wire 1 U# ALUA [2] $end
$var wire 1 V# ALUA [1] $end
$var wire 1 W# ALUA [0] $end
$var wire 1 X# ALUB [3] $end
$var wire 1 Y# ALUB [2] $end
$var wire 1 Z# ALUB [1] $end
$var wire 1 [# ALUB [0] $end
$var wire 1 \# ALUFlagIn $end
$var wire 1 O ALUResult [3] $end
$var wire 1 P ALUResult [2] $end
$var wire 1 Q ALUResult [1] $end
$var wire 1 R ALUResult [0] $end
$var wire 1 w ALUFlags [3] $end
$var wire 1 x ALUFlags [2] $end
$var wire 1 y ALUFlags [1] $end
$var wire 1 z ALUFlags [0] $end
$var wire 1 ]# C $end
$var wire 1 ^# N $end
$var wire 1 _# V $end
$var reg 1 `# Z $end

$scope begin genblk1 $end

$scope module F4 $end
$var parameter 32 a# bits $end
$var wire 1 T# and_in1 [3] $end
$var wire 1 U# and_in1 [2] $end
$var wire 1 V# and_in1 [1] $end
$var wire 1 W# and_in1 [0] $end
$var wire 1 X# and_in2 [3] $end
$var wire 1 Y# and_in2 [2] $end
$var wire 1 Z# and_in2 [1] $end
$var wire 1 [# and_in2 [0] $end
$var wire 1 O and_out [3] $end
$var wire 1 P and_out [2] $end
$var wire 1 Q and_out [1] $end
$var wire 1 R and_out [0] $end
$var wire 1 ^# and_N $end
$var reg 1 b# and_V $end
$var reg 1 c# and_C $end

$scope begin genblk1[3] $end
$var parameter 32 d# i $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 e# i $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 f# i $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 g# i $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module OR $end
$var parameter 32 h# bits $end
$var parameter 4 i# ALUControl $end
$var wire 1 j# ALUA [3] $end
$var wire 1 k# ALUA [2] $end
$var wire 1 l# ALUA [1] $end
$var wire 1 m# ALUA [0] $end
$var wire 1 n# ALUB [3] $end
$var wire 1 o# ALUB [2] $end
$var wire 1 p# ALUB [1] $end
$var wire 1 q# ALUB [0] $end
$var wire 1 r# ALUFlagIn $end
$var wire 1 S ALUResult [3] $end
$var wire 1 T ALUResult [2] $end
$var wire 1 U ALUResult [1] $end
$var wire 1 V ALUResult [0] $end
$var wire 1 { ALUFlags [3] $end
$var wire 1 | ALUFlags [2] $end
$var wire 1 } ALUFlags [1] $end
$var wire 1 ~ ALUFlags [0] $end
$var wire 1 s# C $end
$var wire 1 t# N $end
$var wire 1 u# V $end
$var reg 1 v# Z $end

$scope begin genblk1 $end

$scope module F5 $end
$var parameter 32 w# bits $end
$var wire 1 j# or_in1 [3] $end
$var wire 1 k# or_in1 [2] $end
$var wire 1 l# or_in1 [1] $end
$var wire 1 m# or_in1 [0] $end
$var wire 1 n# or_in2 [3] $end
$var wire 1 o# or_in2 [2] $end
$var wire 1 p# or_in2 [1] $end
$var wire 1 q# or_in2 [0] $end
$var wire 1 S or_out [3] $end
$var wire 1 T or_out [2] $end
$var wire 1 U or_out [1] $end
$var wire 1 V or_out [0] $end
$var wire 1 t# or_N $end
$var reg 1 x# or_C $end
$var reg 1 y# or_V $end

$scope begin genblk1[3] $end
$var parameter 32 z# j $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 {# j $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 |# j $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 }# j $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module NOT $end
$var parameter 32 ~# bits $end
$var parameter 4 !$ ALUControl $end
$var wire 1 "$ ALUA [3] $end
$var wire 1 #$ ALUA [2] $end
$var wire 1 $$ ALUA [1] $end
$var wire 1 %$ ALUA [0] $end
$var wire 1 &$ ALUB [3] $end
$var wire 1 '$ ALUB [2] $end
$var wire 1 ($ ALUB [1] $end
$var wire 1 )$ ALUB [0] $end
$var wire 1 *$ ALUFlagIn $end
$var wire 1 W ALUResult [3] $end
$var wire 1 X ALUResult [2] $end
$var wire 1 Y ALUResult [1] $end
$var wire 1 Z ALUResult [0] $end
$var wire 1 !! ALUFlags [3] $end
$var wire 1 "! ALUFlags [2] $end
$var wire 1 #! ALUFlags [1] $end
$var wire 1 $! ALUFlags [0] $end
$var wire 1 +$ C $end
$var wire 1 ,$ N $end
$var wire 1 -$ V $end
$var reg 1 .$ Z $end

$scope begin genblk1 $end

$scope module F6 $end
$var parameter 32 /$ bits $end
$var wire 1 "$ not_in1 [3] $end
$var wire 1 #$ not_in1 [2] $end
$var wire 1 $$ not_in1 [1] $end
$var wire 1 %$ not_in1 [0] $end
$var wire 1 &$ not_in2 [3] $end
$var wire 1 '$ not_in2 [2] $end
$var wire 1 ($ not_in2 [1] $end
$var wire 1 )$ not_in2 [0] $end
$var wire 1 *$ not_Fin $end
$var wire 1 W not_out [3] $end
$var wire 1 X not_out [2] $end
$var wire 1 Y not_out [1] $end
$var wire 1 Z not_out [0] $end
$var wire 1 ,$ not_N $end
$var reg 1 0$ not_C $end
$var reg 1 1$ not_V $end
$var reg 4 2$ not_w [3:0] $end

$scope begin genblk1[3] $end
$var parameter 32 3$ k $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 4$ k $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 5$ k $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 6$ k $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module XOR $end
$var parameter 32 7$ bits $end
$var parameter 4 8$ ALUControl $end
$var wire 1 9$ ALUA [3] $end
$var wire 1 :$ ALUA [2] $end
$var wire 1 ;$ ALUA [1] $end
$var wire 1 <$ ALUA [0] $end
$var wire 1 =$ ALUB [3] $end
$var wire 1 >$ ALUB [2] $end
$var wire 1 ?$ ALUB [1] $end
$var wire 1 @$ ALUB [0] $end
$var wire 1 A$ ALUFlagIn $end
$var wire 1 [ ALUResult [3] $end
$var wire 1 \ ALUResult [2] $end
$var wire 1 ] ALUResult [1] $end
$var wire 1 ^ ALUResult [0] $end
$var wire 1 %! ALUFlags [3] $end
$var wire 1 &! ALUFlags [2] $end
$var wire 1 '! ALUFlags [1] $end
$var wire 1 (! ALUFlags [0] $end
$var wire 1 B$ C $end
$var wire 1 C$ N $end
$var wire 1 D$ V $end
$var reg 1 E$ Z $end

$scope begin genblk1 $end

$scope module F7 $end
$var parameter 32 F$ bits $end
$var wire 1 9$ xor_in1 [3] $end
$var wire 1 :$ xor_in1 [2] $end
$var wire 1 ;$ xor_in1 [1] $end
$var wire 1 <$ xor_in1 [0] $end
$var wire 1 =$ xor_in2 [3] $end
$var wire 1 >$ xor_in2 [2] $end
$var wire 1 ?$ xor_in2 [1] $end
$var wire 1 @$ xor_in2 [0] $end
$var wire 1 [ xor_out [3] $end
$var wire 1 \ xor_out [2] $end
$var wire 1 ] xor_out [1] $end
$var wire 1 ^ xor_out [0] $end
$var wire 1 C$ xor_N $end
$var reg 1 G$ xor_C $end
$var reg 1 H$ xor_V $end

$scope begin genblk1[3] $end
$var parameter 32 I$ l $end
$upscope $end

$scope begin genblk1[2] $end
$var parameter 32 J$ l $end
$upscope $end

$scope begin genblk1[1] $end
$var parameter 32 K$ l $end
$upscope $end

$scope begin genblk1[0] $end
$var parameter 32 L$ l $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module SL $end
$var parameter 32 M$ bits $end
$var parameter 4 N$ ALUControl $end
$var wire 1 O$ ALUA [3] $end
$var wire 1 P$ ALUA [2] $end
$var wire 1 Q$ ALUA [1] $end
$var wire 1 R$ ALUA [0] $end
$var wire 1 S$ ALUB [3] $end
$var wire 1 T$ ALUB [2] $end
$var wire 1 U$ ALUB [1] $end
$var wire 1 V$ ALUB [0] $end
$var wire 1 W$ ALUFlagIn $end
$var wire 1 _ ALUResult [3] $end
$var wire 1 ` ALUResult [2] $end
$var wire 1 a ALUResult [1] $end
$var wire 1 b ALUResult [0] $end
$var wire 1 )! ALUFlags [3] $end
$var wire 1 *! ALUFlags [2] $end
$var wire 1 +! ALUFlags [1] $end
$var wire 1 ,! ALUFlags [0] $end
$var wire 1 X$ C $end
$var wire 1 Y$ N $end
$var wire 1 Z$ V $end
$var reg 1 [$ Z $end

$scope begin genblk1 $end

$scope module F8 $end
$var parameter 32 \$ bits $end
$var wire 1 O$ SL_inA [3] $end
$var wire 1 P$ SL_inA [2] $end
$var wire 1 Q$ SL_inA [1] $end
$var wire 1 R$ SL_inA [0] $end
$var wire 1 S$ SL_inB [3] $end
$var wire 1 T$ SL_inB [2] $end
$var wire 1 U$ SL_inB [1] $end
$var wire 1 V$ SL_inB [0] $end
$var wire 1 W$ SL_Fin $end
$var reg 4 ]$ SL_out [3:0] $end
$var reg 1 ^$ SL_N $end
$var reg 1 _$ SL_C $end
$var reg 1 `$ SL_V $end
$var integer 32 a$ i $end
$var reg 4 b$ carryL [3:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module SR $end
$var parameter 32 c$ bits $end
$var parameter 4 d$ ALUControl $end
$var wire 1 e$ ALUA [3] $end
$var wire 1 f$ ALUA [2] $end
$var wire 1 g$ ALUA [1] $end
$var wire 1 h$ ALUA [0] $end
$var wire 1 i$ ALUB [3] $end
$var wire 1 j$ ALUB [2] $end
$var wire 1 k$ ALUB [1] $end
$var wire 1 l$ ALUB [0] $end
$var wire 1 m$ ALUFlagIn $end
$var wire 1 c ALUResult [3] $end
$var wire 1 d ALUResult [2] $end
$var wire 1 e ALUResult [1] $end
$var wire 1 f ALUResult [0] $end
$var wire 1 -! ALUFlags [3] $end
$var wire 1 .! ALUFlags [2] $end
$var wire 1 /! ALUFlags [1] $end
$var wire 1 0! ALUFlags [0] $end
$var wire 1 n$ C $end
$var wire 1 o$ N $end
$var wire 1 p$ V $end
$var reg 1 q$ Z $end

$scope begin genblk1 $end

$scope module F9 $end
$var parameter 32 r$ bits $end
$var wire 1 e$ SR_inA [3] $end
$var wire 1 f$ SR_inA [2] $end
$var wire 1 g$ SR_inA [1] $end
$var wire 1 h$ SR_inA [0] $end
$var wire 1 i$ SR_inB [3] $end
$var wire 1 j$ SR_inB [2] $end
$var wire 1 k$ SR_inB [1] $end
$var wire 1 l$ SR_inB [0] $end
$var wire 1 m$ SR_Fin $end
$var reg 4 s$ SR_out [3:0] $end
$var reg 1 t$ SR_N $end
$var reg 1 u$ SR_C $end
$var reg 1 v$ SR_V $end
$var integer 32 w$ j $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1111 !
b1111 "
b1 #
b1 $
b1 %
b1 &
b1 '
b1 (
b1 )
b1 *
b1100 +
b1100 ,
b111 -
b111 .
b111 /
b111 0
b111 1
b111 2
b111 3
b111 4
05
06
07
08
09
0:
0;
0<
0=
0>
0?!
0p!
0F"
b1 R"
1"#
b1 2#
0`#
0b#
0c#
0v#
0x#
0y#
0.$
00$
01$
b1 2$
0E$
0G$
0H$
1[$
b0 ]$
0^$
0_$
0`$
b1101 b$
1q$
b0 s$
0t$
0u$
0v$
b100 1!
b0 2!
b100 b!
b1 c!
b100 8"
b10 9"
b100 r"
b11 s"
b100 R#
b100 S#
b100 h#
b101 i#
b100 ~#
b110 !$
b100 7$
b111 8$
b100 M$
b1000 N$
b100 c$
b1001 d$
b100 @!
b100 H!
b100 q!
b100 |!
b100 G"
b100 S"
b100 ##
b100 3#
b100 a#
b100 w#
b100 /$
b100 F$
b100 \$
b100 r$
b0 a!
b1 `!
b10 _!
b11 ^!
b1 ]!
b10 \!
b11 [!
b100 Z!
b0 Y!
b1 X!
b10 W!
b11 V!
b0 7"
b1 6"
b10 5"
b11 4"
b1 3"
b10 2"
b11 1"
b100 0"
b0 /"
b1 ."
b10 -"
b11 ,"
b0 q"
b1 p"
b10 o"
b11 n"
b1 m"
b10 l"
b11 k"
b100 j"
b0 i"
b1 h"
b10 g"
b11 f"
b0 Q#
b1 P#
b10 O#
b11 N#
b1 M#
b10 L#
b11 K#
b100 J#
b0 I#
b1 H#
b10 G#
b11 F#
b0 g#
b1 f#
b10 e#
b11 d#
b0 }#
b1 |#
b10 {#
b11 z#
b0 6$
b1 5$
b10 4$
b11 3$
b0 L$
b1 K$
b10 J$
b11 I$
bx a$
bx w$
1B
1A
0@
1?
1F
1E
0D
0C
0J
1I
0H
0G
0N
0M
0L
0K
1R
0Q
0P
0O
1V
1U
1T
0S
0Z
1Y
1X
1W
0^
1]
1\
0[
0b
0a
0`
0_
0f
0e
0d
0c
0j
1i
0h
1g
0n
1m
0l
0k
0r
0q
0p
0o
0v
1u
1t
0s
0z
0y
0x
0w
0~
0}
0|
0{
0$!
0#!
0"!
1!!
0(!
0'!
0&!
0%!
0,!
0+!
1*!
0)!
00!
0/!
1.!
0-!
1<!
1=!
0>!
1E!
1D!
0C!
1B!
1A!
1F!
zG!
0M!
0L!
0K!
1J!
1I!
0Q!
0P!
1O!
1N!
1U!
1T!
0S!
0R!
1m!
0n!
0o!
1v!
1u!
0t!
0s!
1r!
0z!
0y!
1x!
0w!
1{!
0#"
0""
0!"
1~!
1}!
0'"
0&"
1%"
0$"
1+"
1*"
0)"
1("
0C"
0D"
0E"
1K"
0J"
0I"
0H"
0P"
1O"
0N"
0M"
0L"
0Q"
0]"
1\"
0["
0Z"
0Y"
1a"
0`"
0_"
0^"
0e"
0d"
0c"
0b"
1}"
0~"
0!#
1'#
0&#
0%#
0$#
0,#
0+#
0*#
0)#
1(#
10#
1/#
1.#
1-#
11#
0=#
1<#
1;#
1:#
19#
1A#
0@#
0?#
0>#
0E#
1D#
1C#
1B#
0]#
0^#
0_#
0s#
0t#
0u#
0+$
1,$
0-$
0B$
0C$
0D$
0X$
0Y$
0Z$
0n$
0o$
0p$
0m$
1l$
1k$
1j$
0i$
1h$
0g$
0f$
0e$
0W$
1V$
1U$
1T$
0S$
1R$
0Q$
0P$
0O$
0A$
1@$
1?$
1>$
0=$
1<$
0;$
0:$
09$
0*$
1)$
1($
1'$
0&$
1%$
0$$
0#$
0"$
0r#
1q#
1p#
1o#
0n#
1m#
0l#
0k#
0j#
0\#
1[#
1Z#
1Y#
0X#
1W#
0V#
0U#
0T#
0|"
1{"
1z"
1y"
0x"
1w"
0v"
0u"
0t"
0B"
1A"
1@"
1?"
0>"
1="
0<"
0;"
0:"
0l!
0k!
0j!
1i!
1h!
1g!
1f!
1e!
1d!
0;!
0:!
09!
18!
17!
16!
15!
14!
13!
0X"
1W"
0V"
0U"
0T"
08#
17#
06#
05#
04#
$end
#1000
b111 !
b1 +
15
b111 "
b1 ,
16
17
18
19
1:
1;
1<
1=
b11 4
1>
1;!
1k!
0i!
0h!
0d!
1:!
08!
07!
03!
1l!
1\#
1r#
1A$
1#"
1M!
1L!
1""
1!"
1K!
1z!
1y!
1w!
0("
0U!
1Q!
1S!
0O!
0N!
0v!
0E!
0D!
0u!
1t!
1C!
0I!
0}!
0r!
0A!
0<!
0m!
1o!
1>!
0+"
1'"
0*"
1&"
1("
1s!
1E!
0C!
1n
0m
1j
0i
1n!
1}!
1r!
1m!
0o!
1v!
1u!
0s!
0n
1m
1k
0n!
0k
1B"
1|"
1*$
1W$
1m$
0A
1D
0j$
b1 s$
b0 w$
b0 s$
1t$
b1000 s$
b1 w$
0t$
b100 s$
1t$
b1100 s$
b10 w$
0t$
b110 s$
1t$
b1110 s$
b11 w$
x_$
1_$
b1 ]$
b0 a$
b10 ]$
b11 ]$
b1 a$
b110 ]$
b111 ]$
b10 a$
1^$
b1110 ]$
b1111 ]$
b11 a$
b1110 ]$
b1111 ]$
b100 a$
b1110 ]$
b1111 ]$
b101 a$
b1110 ]$
b1111 ]$
b110 a$
b1110 ]$
b1111 ]$
b111 a$
b111 2$
b111 2#
b111 R"
1o$
1X$
1Y$
1V"
1U"
16#
15#
1+!
1)!
1-!
1d"
1c"
0D#
1@#
0C#
1?#
1["
1Z"
1Q"
1E"
0O"
1+#
1*#
1M"
1r
1D"
1o
0X
0Y
1M
1L
0I
1G
1b
1a
1`
1_
1e
1d
1c
0q$
0[$
0"#
0t
0*!
0.!
#2000
b1010 !
b1110 +
05
b1010 "
b1110 ,
06
b1111 #
07
b11 .
b11 /
b11 0
b11 1
b11 2
b11 3
b1 4
0;!
0l!
0>$
0o#
0Y#
0k!
1j!
1i!
1h!
0g!
0e!
1d!
0:!
19!
18!
17!
06!
04!
13!
0#"
0M!
0z!
0x!
0w!
1+"
0'"
1)"
0%"
0("
1$"
0Q!
0T!
1P!
1N!
0v!
0E!
1I!
0L!
0""
1A!
1<!
0>!
0+"
0)"
1("
0$"
1v!
0t!
1s!
0u!
0j
1i
1n!
0~!
0}!
0{!
1o!
0r!
0m!
0o!
0v!
1t!
0m
1k
0B"
0\
0T
0B
0F
0E
1C
0k$
0T$
0'$
0y"
1<"
1;"
1:"
b11 2#
b11 2$
x_$
0^$
b1 ]$
b0 a$
b10 ]$
b11 ]$
b1 a$
b110 ]$
b111 ]$
b10 a$
1^$
b1110 ]$
b1111 ]$
b11 a$
0t$
b1 s$
b0 w$
b0 s$
1t$
b1000 s$
b1 w$
1u$
0_$
b1 b$
b1111 R"
0X$
1n$
1T"
05#
1/!
0+!
1b"
1C#
0?#
1Y"
1L"
1C"
0E"
0M"
0*#
0r
1q
1X
0L
0G
0e
0d
1F"
1p
#3000
b11 !
b100 +
b11 "
b100 ,
b1 #
b11 -
17
b1110 $
b1100 .
b1110 %
b1100 /
b1110 &
b1100 0
b1110 '
b1100 1
b1110 (
b1100 2
b1110 )
b1100 3
b1110 *
b10 4
0h$
1g$
1f$
1e$
0R$
1Q$
1P$
1O$
0@$
0?$
1>$
1=$
0<$
1;$
1:$
19$
0q#
0p#
1o#
1n#
0m#
1l#
1k#
1j#
0[#
0Z#
1Y#
1X#
0W#
1V#
1U#
1T#
0j!
0h!
1g!
0d!
09!
07!
16!
03!
0y!
1x!
1w!
1+"
0("
1T!
0P!
0N!
1U!
0I!
0K!
0J!
0A!
0<!
0F!
1*"
0&"
1)"
1("
1v!
0s!
1D!
1E!
1C!
0B!
0i
0=!
0n!
1~!
0!"
0~!
1u!
1s!
0k
0g
1n!
1k
1B"
0V
1T
1S
0R
1P
1O
1B
1A
1@
0?
1F
1E
0l$
1k$
0V$
0U$
1T$
1S$
0)$
0($
1'$
1&$
0%$
1$$
1#$
1"$
0{"
0z"
1y"
1x"
0w"
1v"
1u"
1t"
0?"
0<"
0;"
0:"
1^#
1t#
1{
1w
b1100 2#
b1100 2$
1_$
b1110 ]$
b0 a$
b1100 ]$
b1101 ]$
b1 a$
b1010 ]$
b1011 ]$
b10 a$
0^$
b110 ]$
b111 ]$
b11 a$
1^$
b1110 ]$
b1111 ]$
b100 a$
b1110 ]$
b1111 ]$
b101 a$
b1110 ]$
b1111 ]$
b110 a$
b1110 ]$
b1111 ]$
b111 a$
b1110 ]$
b1111 ]$
b1000 a$
b1110 ]$
b1111 ]$
b1001 a$
b1110 ]$
b1111 ]$
b1010 a$
b1110 ]$
b1111 ]$
b1011 a$
b1110 ]$
b1111 ]$
b1100 a$
b1110 s$
b0 w$
0t$
b111 s$
1t$
b1111 s$
b1 w$
0t$
b111 s$
1t$
b1111 s$
b10 w$
b11 R"
b1000 b$
1X$
0U"
0T"
07#
06#
15#
14#
1+!
0c"
0b"
1E#
0A#
1D#
0@#
0C#
1?#
0B#
1>#
0<#
0Y"
0Z"
0Q"
0L"
0;#
0C"
0D"
1N"
1,#
1)#
0q
0o
1~"
1s
0W
0X
1Y
1Z
1N
1K
1H
1f
1e
1d
0,$
0!!
0F"
0p
#4000
b1011 !
b101 +
b1011 "
b101 ,
b1110 #
b1100 -
b100 $
b1 .
08
b100 %
b1 /
09
b100 &
b1 0
0:
b100 '
b1 1
0;
b100 (
b1 2
0<
b100 )
b1 3
0=
b100 *
b1 4
0>
0\#
0r#
0A$
0g$
0e$
0Q$
0O$
1@$
0>$
0=$
0;$
09$
1q#
0o#
0n#
0l#
0j#
1[#
0Y#
0X#
0V#
0T#
1k!
1d!
1:!
13!
1z!
1y!
0x!
0("
1$"
0U!
1Q!
1R!
1L!
1}!
1r!
1K!
1J!
1m!
1o!
1I!
1F!
1>!
1A!
1<!
0>!
0+"
1'"
0*"
1&"
0)"
0s!
0E!
0D!
0C!
1i
1n
1m
0n!
1!"
1""
0v!
0k
0|"
0*$
0W$
0m$
1^
1\
0]
1V
0S
0U
0P
0O
0B
0A
0@
0F
0C
1l$
0k$
1V$
0T$
0S$
1)$
0'$
0&$
0$$
0"$
1{"
0y"
0x"
0v"
0t"
0A"
0@"
1?"
1>"
0="
1<"
1;"
1:"
0^#
0t#
0{
0w
b1100 R"
1?!
1`#
0t$
b10 s$
x_$
b1000 ]$
b100 2$
b100 2#
0u$
0_$
b11 b$
0o$
0X$
04#
1x
1h
0W"
0V"
1U"
1T"
0n$
0+!
0/!
0-!
1B#
0>#
1e"
0a"
0d"
1c"
1b"
1Z"
0["
0\"
0Z"
0)#
1P"
1M"
1D"
0~"
0s
1o
1W
1J
1G
0K
0b
0a
0`
0f
0d
0c
1,$
1!!
#5000
b1001 !
b1111 +
15
b1001 "
b1111 ,
16
b100 #
b1 -
07
b1111 $
b1000 .
18
b1111 %
b1000 /
19
b1111 &
b1000 0
1:
b1111 '
b1000 1
1;
b1111 (
b1000 2
1<
b1111 )
b1000 3
1=
b1111 *
1>
1;!
1l!
1\#
1r#
1A$
1h$
1g$
1e$
1R$
1Q$
1O$
0@$
1=$
1<$
1;$
19$
0q#
1n#
1m#
1l#
1j#
0[#
1X#
1W#
1V#
1T#
1j!
1h!
0f!
19!
17!
05!
1#"
1M!
0y!
0w!
1*"
0&"
0R!
1N!
1v!
1E!
0*"
1("
0$"
0u!
1B!
1=!
0}!
0!"
0r!
0m!
0o!
1u!
1s!
0t!
0n
0m
1g
1n!
1k
0B"
1|"
1*$
1W$
1m$
1]
1S
1U
1O
1B
1?
1F
0D
1C
0V$
1S$
0)$
1&$
1%$
1$$
1"$
0{"
1x"
1w"
1v"
1t"
1A"
0?"
0>"
0<"
0:"
1^#
1t#
1{
1w
0?!
0`#
1t$
b1111 s$
b0 w$
0t$
b111 s$
1t$
b1111 s$
b1 w$
1_$
b1111 ]$
b0 a$
b1110 ]$
b1111 ]$
b1 a$
b1110 ]$
b1111 ]$
b10 a$
b1110 ]$
b1111 ]$
b11 a$
b1110 ]$
b1111 ]$
b100 a$
b1110 ]$
b1111 ]$
b101 a$
b1110 ]$
b1111 ]$
b110 a$
b1110 ]$
b1111 ]$
b111 a$
b1110 ]$
b1111 ]$
b1000 a$
b1000 2$
b1000 2#
b100 R"
1u$
b1100 b$
1o$
1X$
0T"
05#
14#
0x
0h
1n$
1+!
1/!
1-!
0b"
1C#
0?#
0B#
1>#
0:#
01#
1!#
0M"
1*#
1v
0D"
0o
0W
1X
1L
0G
1b
1a
1`
1f
1d
1c
0,$
0!!
#6000
b1000 !
b1000 +
05
b110 "
b10 ,
06
b1111 #
b1000 -
17
b11 $
b101 .
08
b11 %
b101 /
09
b11 &
b101 0
0:
b11 '
b101 1
0;
b11 (
b101 2
0<
b11 )
b101 3
0=
b11 *
b11 4
0>
0;!
0l!
0\#
0r#
0A$
0f$
0e$
0P$
0O$
1@$
1>$
0=$
0:$
09$
1q#
1o#
0n#
0k#
0j#
1[#
1Y#
0X#
0U#
0T#
0k!
0i!
0h!
0g!
1f!
1e!
0d!
0:!
09!
08!
06!
0#"
0M!
0z!
1y!
1x!
1w!
1+"
0'"
1*"
1)"
0("
0Q!
0T!
0S!
0v!
0E!
0J!
0K!
0L!
1!"
0""
0!"
0F!
1>!
0+"
0*"
1&"
0)"
1%"
1("
1v!
1t!
0s!
0B!
1j
0=!
0n!
1~!
1!"
1}!
1{!
1o!
1r!
1m!
0o!
0v!
0u!
1m
0k
0g
1B"
0|"
0*$
0W$
0m$
0^
0S
1R
0O
0B
0?
0F
0E
1D
0C
1k$
1V$
1T$
0S$
1)$
1'$
0&$
0#$
0"$
1{"
1y"
0x"
0u"
0t"
0A"
1>"
1="
1<"
1:"
0^#
0t#
0{
0w
1?!
0t$
b0 s$
x_$
0_$
0^$
b0 ]$
b11 2$
b11 2#
b1000 R"
0u$
b1111 b$
0o$
0X$
0Y$
0U"
1T"
17#
16#
04#
1h
0n$
0+!
0)!
0/!
0-!
0c"
1b"
0E#
1A#
0D#
1@#
1B#
0>#
09#
1;#
1<#
1:#
0(#
0}"
19#
11#
1(#
1}"
0!#
0N"
1M"
0,#
0*#
0v
1D"
1o
1W
0Y
0Z
0N
0L
0H
1G
0b
0a
0`
0_
0f
0e
0d
0c
1,$
1!!
1q$
1[$
1*!
1.!
#7000
15
b111 "
b1001 ,
b11 #
b101 -
07
b111 $
b1001 .
18
b111 %
b1001 /
19
b111 &
b1001 0
1:
b111 '
b1001 1
1;
b111 (
b1001 2
1<
b111 )
b1001 3
1=
b111 *
1>
1;!
1\#
1r#
1A$
1f$
1P$
0>$
1=$
1:$
0o#
1n#
1k#
0Y#
1X#
1U#
1k!
0j!
1h!
1g!
1M!
1z!
0w!
1+"
1E!
0+"
1'"
0("
1v!
0}!
1""
0r!
0m!
1o!
0v!
1s!
1u!
1n
0m
1n!
1k
0B"
1|"
1*$
1W$
1m$
1[
1S
1E
1C
1B
0T$
1S$
0'$
1&$
1#$
0y"
1x"
1u"
1A"
1?"
0>"
0;"
0:"
1t#
1C$
1%!
1{
0?!
b111 s$
b0 w$
b11 s$
1t$
b1011 s$
b1 w$
0t$
b101 s$
1t$
b1101 s$
b10 w$
0t$
b110 s$
1t$
b1110 s$
b11 w$
x_$
1_$
b111 ]$
b0 a$
1^$
b1110 ]$
b1111 ]$
b1 a$
b1110 ]$
b1111 ]$
b10 a$
b1110 ]$
b1111 ]$
b11 a$
b1110 ]$
b1111 ]$
b100 a$
b1110 ]$
b1111 ]$
b101 a$
b1110 ]$
b1111 ]$
b110 a$
b1110 ]$
b1111 ]$
b111 a$
b1110 ]$
b1111 ]$
b1000 a$
b1110 ]$
b1111 ]$
b1001 a$
b1001 2$
b1001 2#
b11 R"
1u$
b1011 b$
1o$
1X$
1Y$
1W"
1V"
0T"
06#
14#
0h
1n$
1+!
1)!
1/!
1-!
0e"
1a"
1d"
0b"
1D#
0@#
0B#
1>#
1\"
1["
0P"
0M"
0+#
1)#
1N"
1~"
0D"
0o
1s
0W
1Y
0M
1K
0J
1H
0G
1b
1a
1`
1_
1e
1d
1c
0,$
0!!
0q$
0[$
0*!
0.!
#8000
b111 !
b111 +
05
16
b111 #
b1001 -
17
b1001 $
b1111 .
08
b1001 %
b1111 /
09
b1001 &
b1111 0
0:
b1001 '
b1111 1
0;
b1001 (
b1111 2
0<
b1001 )
b1111 3
0=
b1001 *
0>
0;!
1l!
0\#
0r#
0A$
0g$
0f$
1e$
0Q$
0P$
1O$
1?$
1>$
0;$
0:$
19$
1p#
1o#
0l#
0k#
1j#
1Z#
1Y#
0V#
0U#
1T#
1:!
19!
18!
07!
16!
15!
14!
03!
1#"
0M!
1Q!
1P!
1O!
0N!
1v!
0E!
0I!
1J!
1K!
1L!
1F!
0A!
0<!
1B!
1C!
1D!
0i
1=!
1g
1B"
0|"
0*$
0W$
0m$
0[
1O
0B
1A
1@
1?
1F
1U$
1T$
1($
1'$
0$$
0#$
1"$
1z"
1y"
0v"
0u"
1t"
0?"
1>"
1;"
1^#
0C$
0%!
1w
0t$
b1 s$
x_$
0_$
0^$
b0 ]$
b1001 R"
0u$
b101 b$
0o$
0X$
0Y$
0V"
1T"
0n$
0+!
0)!
0/!
0-!
0d"
1b"
0["
1O"
1M"
0N"
1D"
1o
1I
0H
1G
0b
0a
0`
0_
1f
0e
0d
0c
1[$
1*!
#9000
15
b1000 "
b1000 ,
06
b1001 #
b1111 -
07
b1100 $
b1010 .
b1100 %
b1010 /
b1100 &
b1010 0
b1100 '
b1010 1
b1100 (
b1010 2
b1100 )
b1010 3
b1100 *
b10 4
1;!
0l!
0h$
1f$
0R$
1P$
0@$
0>$
0<$
1:$
0q#
0o#
0m#
1k#
0[#
0Y#
0W#
1U#
0k!
0g!
0f!
0e!
1d!
0#"
1M!
0z!
0y!
0x!
1w!
1+"
0'"
1*"
0&"
1)"
0%"
1("
0v!
1E!
1}!
0""
0!"
1r!
1m!
0~!
0}!
0{!
0r!
0m!
0o!
0+"
0*"
0)"
0("
1$"
1v!
0n
1}!
1r!
1m!
1o!
0v!
0u!
0t!
0s!
1n
1m
0n!
0k
0B"
0V
0R
1B
0F
0E
0D
0C
0l$
0V$
0T$
0)$
0'$
0%$
1#$
0{"
0y"
0w"
1u"
1@"
1?"
0<"
0;"
1:"
b1100 2#
b1100 2$
x_$
0_$
b11 s$
1p!
b1010 b$
1l
07#
15#
1E#
0A#
0C#
1?#
0<#
0;#
1,#
1+#
0X
1Z
1N
1M
1e
#10000
b1 !
b0 +
16
b1100 #
b1010 -
b1000 $
b0 .
18
b1000 %
b0 /
19
b1000 &
b0 0
1:
b1000 '
b0 1
1;
b1000 (
b0 2
1<
b1000 )
b0 3
1=
b1000 *
b0 4
1>
1l!
1\#
1r#
1A$
0f$
0P$
0?$
0=$
0:$
0p#
0n#
0k#
0Z#
0X#
0U#
0:!
09!
08!
05!
04!
1#"
1U!
0Q!
0P!
0O!
1v!
0J!
0K!
0F!
0>!
0E!
0B!
0C!
0j
0=!
0g
1|"
1*$
1W$
1m$
0]
1[
0\
0U
0T
0O
0B
0@
0?
1F
0k$
0U$
0S$
0($
0&$
0#$
0z"
0x"
0u"
0A"
0?"
0="
1;"
0^#
1C$
1%!
0w
b1100 R"
0p!
1`#
1t$
b1000 s$
b0 w$
x_$
0_$
1^$
b1000 ]$
b0 a$
b0 2$
b0 2#
b100 b$
1o$
1Y$
05#
04#
1x
0l
0W"
1U"
1)!
1-!
1C#
0?#
1B#
0>#
1e"
0a"
1c"
0\"
0:#
09#
01#
1!#
0(#
0}"
0!#
1*#
1P"
1N"
0O"
0u
1W
1X
1J
0I
1H
1L
1_
0f
0e
1c
1,$
1!!
0[$
0*!
#11000
b11 !
b11 +
b1000 #
b0 -
17
b0 $
b1000 .
b0 %
b1000 /
b0 &
b1000 0
b0 '
b1000 1
b0 (
b1000 2
b0 )
b1000 3
b0 *
b1000 4
0e$
0O$
1=$
09$
1n#
0j#
1X#
0T#
1:!
19!
15!
0U!
1Q!
1P!
1K!
1E!
1C!
1B"
1B
1@
1i$
1S$
1&$
0"$
1x"
0t"
0@"
0>"
0;"
b1000 2#
b1000 2$
x_$
1_$
0^$
b0 ]$
b1 ]$
b1 a$
b10 ]$
b11 ]$
b10 a$
b110 ]$
b111 ]$
b11 a$
1^$
b1110 ]$
b1111 ]$
b100 a$
b1110 ]$
b1111 ]$
b101 a$
b1110 ]$
b1111 ]$
b110 a$
b1110 ]$
b1111 ]$
b111 a$
b1110 ]$
b1111 ]$
b1000 a$
b1100 b$
xu$
1u$
0t$
b0 s$
1t$
b1000 s$
b1 w$
0t$
b100 s$
1t$
b1100 s$
b10 w$
0t$
b110 s$
1t$
b1110 s$
b11 w$
0t$
b111 s$
1t$
b1111 s$
b100 w$
0t$
b111 s$
1t$
b1111 s$
b101 w$
0t$
b111 s$
1t$
b1111 s$
b110 w$
0t$
b111 s$
1t$
b1111 s$
b111 w$
0t$
b111 s$
1t$
b1111 s$
b1000 w$
b0 R"
1X$
1n$
0U"
0T"
14#
1/!
1+!
0c"
0b"
0B#
1>#
19#
1(#
1}"
1!#
0N"
0M"
0)#
1v
1u
0~"
0D"
0o
0s
0W
0K
0H
0G
1f
1e
1d
1b
1a
1`
0,$
0!!
#12000
08
09
0:
0;
0<
0=
b1101 *
b10 4
0>
0\#
0r#
0A$
1h$
1f$
1e$
0|"
0*$
0W$
1k$
0i$
0m$
0u$
0t$
b11 s$
x_$
0_$
0^$
b0 ]$
b0 2$
b0 2#
0n$
0o$
0X$
0Y$
04#
0+!
0)!
0/!
0-!
1B#
0>#
09#
0(#
0}"
0!#
1)#
0v
0u
1~"
1s
1W
1K
0b
0a
0`
0_
0d
0c
1,$
1!!
1[$
1*!
